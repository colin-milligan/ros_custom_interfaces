#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

RED='\033[0;31m'
NC='\033[0m'

branch="$(git rev-parse --abbrev-ref HEAD)"

# If branch is "main" then reject push
if [[ $branch == "main" ]]; then
  echo "${RED}You are not authorized to push to the main branch.${RESET}"
  exit 1
fi

exit 0
